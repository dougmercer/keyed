name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: 'Update all snapshots'
        required: false
        default: false
        type: boolean
      specific_test:
        description: 'Specific test to update (e.g. "test_animation_example[interp_lines]")'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev pkg-config python3-dev ffmpeg
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[test]"
          
      - name: Cache snapshots
        id: cache-snapshots
        uses: actions/cache@v3
        with:
          path: |
            tests/__snapshots__/
          key: ${{ runner.os }}-py${{ matrix.python-version }}-snapshots-${{ hashFiles('tests/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-snapshots-
      
      # Regular test run (no snapshot updates)
      - name: Run all tests 
        if: ${{ !inputs.update_snapshots && inputs.specific_test == '' }}
        run: |
          pytest tests/ --doctest-modules --pyargs keyed --cov=keyed --cov-report=xml --junitxml=junit/test-results.xml
      
      # Update all snapshots if requested  
      - name: Update all snapshots
        if: ${{ inputs.update_snapshots && inputs.specific_test == '' }}
        run: |
          pytest tests/ --snapshot-update --doctest-modules --pyargs keyed --cov=keyed --cov-report=xml --junitxml=junit/test-results.xml
      
      # Update specific test snapshot if requested
      - name: Update specific test snapshot
        if: ${{ inputs.specific_test != '' }}
        run: |
          pytest "tests/${{ inputs.specific_test }}" --snapshot-update --doctest-modules --pyargs keyed --cov=keyed --cov-report=xml --junitxml=junit/test-results.xml
      
      # Upload updated snapshots as artifacts
      - name: Upload updated snapshots
        if: ${{ inputs.update_snapshots || inputs.specific_test != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: updated-snapshots-py${{ matrix.python-version }}
          path: |
            tests/__snapshots__/
