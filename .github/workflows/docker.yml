name: Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/keyed
          tags: |
            # Only tag as latest on main branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # For PRs, use pr-{number} as tag
            type=ref,event=pr
            # Always include sha for traceability
            type=sha,format=short
            # Include buildcache tag only on main
            type=raw,value=buildcache,enable=${{ github.ref == 'refs/heads/main' }}
          # Add labels for expiration policy
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Docker image for ${{ github.repository }}
            # Label PR and SHA images as temporary
            org.opencontainers.image.vendor=${{ github.ref == 'refs/heads/main' && 'production' || 'temporary' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.minimal
          push: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test the Docker image
        run: |
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          docker run --rm $FIRST_TAG --help
