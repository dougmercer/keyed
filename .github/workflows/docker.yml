name: Docker

on:
  push:
    branches: [ main, '*' ]

jobs:
  build-docker:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Only login when we need to push (main branch)
      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # Only include latest tag on main
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Only include version tag on main
            type=raw,value=${{ steps.extract_version.outputs.version }},enable=${{ github.ref == 'refs/heads/main' }}
            # Always include sha for traceability
            type=sha,format=short

      # Build and test the image
      - name: Build and test Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.minimal
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test the Docker image
        run: |
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          docker run --rm $FIRST_TAG --help

      # Push the image (only on main)
      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.minimal
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
